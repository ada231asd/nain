import { createApp } from 'vue'
import { createPinia } from 'pinia'
import router from './router'
import App from './App.vue'
import { useAuthStore } from './stores/auth'
import websocketNotificationService from './utils/websocketNotifications'
import './assets/variables.css'

const app = createApp(App)
const pinia = createPinia()

app.use(pinia)
app.use(router)

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –∂–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
const authStore = useAuthStore()
authStore.initializeAuth().then(() => {
  // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ WebSocket –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
  if (authStore.token) {
    console.log('üîå [MAIN] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ WebSocket')
    console.log('üîë [MAIN] –¢–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω:', authStore.token.substring(0, 20) + '...')
    websocketNotificationService.connect(authStore.token)
    
    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –±—Ä–∞—É–∑–µ—Ä–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    websocketNotificationService.requestNotificationPermission()
  } else {
    console.log('‚ùå [MAIN] –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω, WebSocket –Ω–µ –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è')
  }
  
  // –ú–æ–Ω—Ç–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  app.mount('#app')
}).catch((error) => {
  console.error('‚ùå [MAIN] –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error)
  // –î–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ –º–æ–Ω—Ç–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
  app.mount('#app')
})

// –ì–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã–π —Å–µ—Ä–≤–∏—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
app.config.globalProperties.$wsNotifications = websocketNotificationService