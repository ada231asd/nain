// WebSocket —Å–µ—Ä–≤–∏—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
import { API_CONFIG } from '../api/config'

class WebSocketNotificationService {
  constructor() {
    this.ws = null
    this.reconnectAttempts = 0
    this.maxReconnectAttempts = 5
    this.reconnectDelay = 3000
    this.isConnecting = false
    this.shouldReconnect = true
    this.pingInterval = null
  }

  /**
   * –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ WebSocket —Å–µ—Ä–≤–µ—Ä—É
   * @param {string} token - JWT —Ç–æ–∫–µ–Ω –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
   */
  connect(token) {
    if (!token) {
      console.warn('WebSocket: –¢–æ–∫–µ–Ω –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω')
      return
    }

    if (this.ws && (this.ws.readyState === WebSocket.OPEN || this.ws.readyState === WebSocket.CONNECTING)) {
      console.log('WebSocket: –£–∂–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∏–ª–∏ –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è')
      return
    }

    if (this.isConnecting) {
      console.log('WebSocket: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ')
      return
    }

    this.isConnecting = true
    this.shouldReconnect = true

    try {
      // –ü–æ–ª—É—á–∞–µ–º –±–∞–∑–æ–≤—ã–π URL –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ WebSocket URL
      const baseURL = API_CONFIG.baseURL || 'http://localhost:8000/api'
      
      let wsURL
      if (baseURL.startsWith('http://') || baseURL.startsWith('https://')) {
        // –ê–±—Å–æ–ª—é—Ç–Ω—ã–π URL - –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –ø—Ä–æ—Ç–æ–∫–æ–ª
        wsURL = baseURL
          .replace('http://', 'ws://')
          .replace('https://', 'wss://')
          .replace('/api', '') // —É–±–∏—Ä–∞–µ–º /api –∏–∑ –ø—É—Ç–∏
      } else {
        // –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π URL - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â–∏–π —Ö–æ—Å—Ç
        const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:'
        const host = window.location.host
        wsURL = `${protocol}//${host}`
      }
      
      const url = `${wsURL}/api/ws/notifications?token=${token}`
      
      console.log('WebSocket: –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫', url)
      this.ws = new WebSocket(url)

      this.ws.onopen = () => {
        console.log('‚úÖ WebSocket: –ü–æ–¥–∫–ª—é—á–µ–Ω')
        this.isConnecting = false
        this.reconnectAttempts = 0
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–π ping
        this.startPing()
      }

      this.ws.onmessage = (event) => {
        try {
          const message = JSON.parse(event.data)
          console.log('WebSocket: –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ', message)
          
          this.handleMessage(message)
        } catch (error) {
          console.error('WebSocket: –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è', error)
        }
      }

      this.ws.onerror = (error) => {
        console.error('‚ùå WebSocket: –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è', error)
        console.error('WebSocket: –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫:', url)
        this.isConnecting = false
      }

      this.ws.onclose = (event) => {
        console.log(`‚ùå WebSocket: –û—Ç–∫–ª—é—á–µ–Ω (–∫–æ–¥: ${event.code}, –ø—Ä–∏—á–∏–Ω–∞: ${event.reason || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'})`)
        this.isConnecting = false
        this.stopPing()
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        if (this.shouldReconnect && this.reconnectAttempts < this.maxReconnectAttempts) {
          this.reconnectAttempts++
          console.log(`WebSocket: –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ ${this.reconnectDelay / 1000}—Å (–ø–æ–ø—ã—Ç–∫–∞ ${this.reconnectAttempts}/${this.maxReconnectAttempts})`)
          
          setTimeout(() => {
            if (this.shouldReconnect) {
              this.connect(token)
            }
          }, this.reconnectDelay)
        } else if (this.reconnectAttempts >= this.maxReconnectAttempts) {
          console.error('WebSocket: –ü—Ä–µ–≤—ã—à–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è')
        }
      }
    } catch (error) {
      console.error('WebSocket: –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è', error)
      this.isConnecting = false
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
   */
  handleMessage(message) {
    switch (message.type) {
      case 'connected':
        console.log('WebSocket: –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ')
        break

      case 'powerbank_returned':
        this.handlePowerbankReturned(message.data)
        break

      case 'pong':
        // –û—Ç–≤–µ—Ç –Ω–∞ ping
        break

      default:
        console.log('WebSocket: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è', message.type)
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤–æ–∑–≤—Ä–∞—Ç–µ powerbank
   */
  handlePowerbankReturned(data) {
    console.log('üîã Powerbank –≤–æ–∑–≤—Ä–∞—â–µ–Ω:', data)
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    this.showNotification({
      title: data.title || '–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–æ–∑–≤—Ä–∞—Ç!',
      message: data.alert || '–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç.',
      type: 'success',
      data: data
    })
  }

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
   */
  showNotification({ title, message, type, data }) {
    // –ü–æ–ø—ã—Ç–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±—Ä–∞—É–∑–µ—Ä–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    if ('Notification' in window && Notification.permission === 'granted') {
      new Notification(title, {
        body: message,
        icon: '/favicon.ico',
        tag: `powerbank-${data.order_id}`
      })
    }
    
    // –¢–∞–∫–∂–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–∏–∑—É–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ UI
    this.showUINotification({ title, message, type, data })
  }

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å –≤–∏–∑—É–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ UI
   */
  showUINotification({ title, message, type, data }) {
    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    const notification = document.createElement('div')
    notification.className = `ws-notification ws-notification-${type}`
    notification.innerHTML = `
      <div class="ws-notification-content">
        <div class="ws-notification-title">${title}</div>
        <div class="ws-notification-message">${message}</div>
        <div class="ws-notification-close" onclick="this.parentElement.parentElement.remove()">√ó</div>
      </div>
    `
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏, –µ—Å–ª–∏ –∏—Ö –µ—â–µ –Ω–µ—Ç
    if (!document.getElementById('ws-notification-styles')) {
      const style = document.createElement('style')
      style.id = 'ws-notification-styles'
      style.textContent = `
        .ws-notification {
          position: fixed;
          top: 20px;
          right: 20px;
          min-width: 300px;
          max-width: 400px;
          padding: 16px 20px;
          background: white;
          border-radius: 8px;
          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
          z-index: 10000;
          animation: slideInRight 0.3s ease-out;
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        }
        
        .ws-notification-success {
          border-left: 4px solid #28a745;
        }
        
        .ws-notification-content {
          position: relative;
        }
        
        .ws-notification-title {
          font-weight: 600;
          font-size: 16px;
          color: #28a745;
          margin-bottom: 8px;
        }
        
        .ws-notification-message {
          font-size: 14px;
          color: #333;
          line-height: 1.4;
        }
        
        .ws-notification-close {
          position: absolute;
          top: -8px;
          right: -8px;
          width: 24px;
          height: 24px;
          background: #f0f0f0;
          border-radius: 50%;
          display: flex;
          align-items: center;
          justify-content: center;
          cursor: pointer;
          font-size: 18px;
          color: #666;
          user-select: none;
          transition: background 0.2s;
        }
        
        .ws-notification-close:hover {
          background: #e0e0e0;
        }
        
        @keyframes slideInRight {
          from {
            transform: translateX(400px);
            opacity: 0;
          }
          to {
            transform: translateX(0);
            opacity: 1;
          }
        }
      `
      document.head.appendChild(style)
    }
    
    document.body.appendChild(notification)
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–±–∏—Ä–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
      notification.style.animation = 'slideInRight 0.3s ease-out reverse'
      setTimeout(() => notification.remove(), 300)
    }, 5000)
  }

  /**
   * –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–π ping
   */
  startPing() {
    this.stopPing()
    
    this.pingInterval = setInterval(() => {
      if (this.ws && this.ws.readyState === WebSocket.OPEN) {
        this.ws.send('ping')
      }
    }, 30000) // –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
  }

  /**
   * –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–π ping
   */
  stopPing() {
    if (this.pingInterval) {
      clearInterval(this.pingInterval)
      this.pingInterval = null
    }
  }

  /**
   * –û—Ç–∫–ª—é—á–∏—Ç—å—Å—è –æ—Ç WebSocket
   */
  disconnect() {
    this.shouldReconnect = false
    this.stopPing()
    
    if (this.ws) {
      this.ws.close()
      this.ws = null
    }
    
    console.log('WebSocket: –û—Ç–∫–ª—é—á–µ–Ω –≤—Ä—É—á–Ω—É—é')
  }

  /**
   * –ó–∞–ø—Ä–æ—Å–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –±—Ä–∞—É–∑–µ—Ä–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
   */
  async requestNotificationPermission() {
    if ('Notification' in window && Notification.permission === 'default') {
      const permission = await Notification.requestPermission()
      console.log('–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', permission)
      return permission === 'granted'
    }
    return Notification.permission === 'granted'
  }
}

// –°–æ–∑–¥–∞–µ–º singleton —ç–∫–∑–µ–º–ø–ª—è—Ä
const websocketNotificationService = new WebSocketNotificationService()

export default websocketNotificationService

