/**
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–º –∏ –±–µ–∫–µ–Ω–¥–æ–º
 * –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –æ–ø–µ—Ä–∞—Ü–∏–π —Å –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞–º–∏
 */

import { useStationsStore } from '../stores/stations'
import { useAdminStore } from '../stores/admin'
import { useAuthStore } from '../stores/auth'
import { pythonAPI } from '../api/pythonApi'

/**
 * –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞
 * @param {Object} orderData - –î–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ { station_id, user_id, powerbank_id }
 * @param {Object} user - –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {Function} loadUserOrders - –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export const refreshAllDataAfterReturn = async (orderData, user, loadUserOrders) => {
  try {
    console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞')
    
    const stationsStore = useStationsStore()
    const adminStore = useAdminStore()
    const authStore = useAuthStore()
    
    // –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ
    const updatePromises = []
    
    // 1. –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞–Ω—Ü–∏–∏
    if (orderData.station_id) {
      updatePromises.push(
        stationsStore.refreshStationData(orderData.station_id).catch(error => {
          console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞–Ω—Ü–∏–∏:', error)
        })
      )
    }
    
    // 2. –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (loadUserOrders && typeof loadUserOrders === 'function') {
      updatePromises.push(
        loadUserOrders().catch(error => {
          console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∑–∞–∫–∞–∑–æ–≤:', error)
        })
      )
    }
    
    // 3. –û–±–Ω–æ–≤–ª—è–µ–º –ª–∏–º–∏—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    updatePromises.push(
      authStore.fetchUserLimits().catch(error => {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ª–∏–º–∏—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error)
      })
    )
    
    // 4. –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∞–¥–º–∏–Ω—Å–∫–æ–º store (–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω)
    if (user?.role && ['subgroup_admin', 'group_admin', 'service_admin'].includes(user.role)) {
      updatePromises.push(
        adminStore.fetchOrders().catch(error => {
          console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∑–∞–∫–∞–∑—ã –≤ –∞–¥–º–∏–Ω—Å–∫–æ–º store:', error)
        })
      )
    }
    
    // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    await Promise.allSettled(updatePromises)
    
    console.log('‚úÖ –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ')
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞:', error)
  }
}

/**
 * –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –≤–∑—è—Ç–∏—è –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞
 * @param {number} stationId - ID —Å—Ç–∞–Ω—Ü–∏–∏
 * @param {number} userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {Object} user - –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {Function} refreshFavorites - –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Å—Ç–∞–Ω—Ü–∏–π
 */
export const refreshAllDataAfterBorrow = async (stationId, userId, user, refreshFavorites) => {
  try {
    console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –≤–∑—è—Ç–∏—è –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞')
    
    const stationsStore = useStationsStore()
    const adminStore = useAdminStore()
    const authStore = useAuthStore()
    
    // –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ
    const updatePromises = []
    
    // 1. –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞–Ω—Ü–∏–∏
    updatePromises.push(
      stationsStore.refreshStationData(stationId).catch(error => {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞–Ω—Ü–∏–∏:', error)
      })
    )
    
    // 2. –û–±–Ω–æ–≤–ª—è–µ–º –∏–∑–±—Ä–∞–Ω–Ω—ã–µ —Å—Ç–∞–Ω—Ü–∏–∏
    if (refreshFavorites && typeof refreshFavorites === 'function') {
      updatePromises.push(
        refreshFavorites().catch(error => {
          console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã–µ —Å—Ç–∞–Ω—Ü–∏–∏:', error)
        })
      )
    }
    
    // 3. –û–±–Ω–æ–≤–ª—è–µ–º –ª–∏–º–∏—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    updatePromises.push(
      authStore.fetchUserLimits().catch(error => {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ª–∏–º–∏—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error)
      })
    )
    
    // 4. –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∞–¥–º–∏–Ω—Å–∫–æ–º store (–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω)
    if (user?.role && ['subgroup_admin', 'group_admin', 'service_admin'].includes(user.role)) {
      updatePromises.push(
        adminStore.fetchOrders().catch(error => {
          console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∑–∞–∫–∞–∑—ã –≤ –∞–¥–º–∏–Ω—Å–∫–æ–º store:', error)
        })
      )
    }
    
    // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    await Promise.allSettled(updatePromises)
    
    console.log('‚úÖ –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –≤–∑—è—Ç–∏—è –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ')
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –≤–∑—è—Ç–∏—è –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞:', error)
  }
}

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å—Ç–∞–Ω—Ü–∏–∏ —Å –ø–æ–ª—É—á–µ–Ω–∏–µ–º –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞—Ö
 * @param {number} stationId - ID —Å—Ç–∞–Ω—Ü–∏–∏
 * @returns {Object} –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞–Ω—Ü–∏–∏
 */
export const refreshStationWithPowerbanks = async (stationId) => {
  try {
    console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞–Ω—Ü–∏–∏ —Å –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞–º–∏:', stationId)
    
    const stationsStore = useStationsStore()
    
    // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–µ—Ç–∞–ª–∏ —Å—Ç–∞–Ω—Ü–∏–∏
    const stationResponse = await pythonAPI.getStation(stationId)
    let stationDetails = stationResponse?.data || stationResponse
    
    if (stationDetails && stationDetails.success && stationDetails.data) {
      stationDetails = stationDetails.data
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ–± –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞—Ö
    const powerbanksResponse = await pythonAPI.getStationPowerbanks(stationId)
    let powerbanksData = powerbanksResponse?.data || powerbanksResponse
    
    if (powerbanksData && powerbanksData.success && powerbanksData.data) {
      powerbanksData = powerbanksData.data
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞–Ω—Ü–∏–∏ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ—Ä—Ç–∞—Ö
    // –í–ê–ñ–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º –¢–û–õ–¨–ö–û –¥–∞–Ω–Ω—ã–µ –∏–∑ API powerbanks
    if (powerbanksData && powerbanksData.success) {
      // API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç: { success, available_powerbanks, count, free_slots, total_slots }
      const availablePowerbanks = powerbanksData.available_powerbanks || [];
      stationDetails.ports = availablePowerbanks;
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¢–û–õ–¨–ö–û –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ API powerbanks
      stationDetails.freePorts = powerbanksData.free_slots; // –ü—É—Å—Ç—ã–µ —Å–ª–æ—Ç—ã –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞
      stationDetails.totalPorts = powerbanksData.total_slots; // –í—Å–µ–≥–æ —Å–ª–æ—Ç–æ–≤
      stationDetails.occupiedPorts = powerbanksData.count; // Powerbank'–∏ –≤ —Å—Ç–∞–Ω—Ü–∏–∏ (–º–æ–∂–Ω–æ –≤–∑—è—Ç—å)
      stationDetails.remain_num = powerbanksData.free_slots; // –û–±–Ω–æ–≤–ª—è–µ–º remain_num –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    } else {
      // –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ–± –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞—Ö, –∏—Å–ø–æ–ª—å–∑—É–µ–º 0 (–±–µ–∑–æ–ø–∞—Å–Ω–µ–µ —á–µ–º –Ω–µ–∞–∫—Ç—É–∞–ª—å–Ω—ã–π remain_num)
      const totalSlots = stationDetails.slots_declared || 20
      
      stationDetails.freePorts = 0
      stationDetails.totalPorts = totalSlots
      stationDetails.occupiedPorts = 0
      
      console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ—Ä—Ç–∞—Ö (dataSync). –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫–∏.')
    }
    
    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —Å—Ç–∞–Ω—Ü–∏–∏ —Å –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞–º–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã')
    return stationDetails
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å—Ç–∞–Ω—Ü–∏–∏ —Å –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞–º–∏:', error)
    throw error
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–º –∏ –±–µ–∫–µ–Ω–¥–æ–º
 * @param {number} stationId - ID —Å—Ç–∞–Ω—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
 * @returns {Object} –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
 */
export const checkDataSync = async (stationId) => {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å—Ç–∞–Ω—Ü–∏–∏:', stationId)
    
    const stationsStore = useStationsStore()
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞–Ω—Ü–∏–∏ –∏–∑ store
    const storeStation = stationsStore.stations.find(s => (s.station_id || s.id) === stationId)
    
    // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞
    const serverStation = await refreshStationWithPowerbanks(stationId)
    
    // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    const syncResult = {
      stationId,
      isSynced: true,
      differences: [],
      storeData: storeStation,
      serverData: serverStation
    }
    
    if (storeStation) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è
      const fieldsToCheck = ['remain_num', 'freePorts', 'occupiedPorts', 'totalPorts']
      
      fieldsToCheck.forEach(field => {
        if (storeStation[field] !== serverStation[field]) {
          syncResult.isSynced = false
          syncResult.differences.push({
            field,
            storeValue: storeStation[field],
            serverValue: serverStation[field]
          })
        }
      })
    } else {
      syncResult.isSynced = false
      syncResult.differences.push({
        field: 'station_in_store',
        storeValue: 'not_found',
        serverValue: 'found'
      })
    }
    
    console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', syncResult)
    return syncResult
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error)
    return {
      stationId,
      isSynced: false,
      error: error.message,
      differences: []
    }
  }
}
