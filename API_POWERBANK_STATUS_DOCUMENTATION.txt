API ДЛЯ СТАТУСОВ ПОВЕРБАНКОВ
============================

ОПИСАНИЕ
--------
API для работы со статусами повербанков на основе представления v_powerbank_status.
Позволяет получать повербанки с их текущими статусами и фильтровать по различным критериям.

СТАТУСЫ ПОВЕРБАНКОВ
------------------
- **in_station** - повербанк находится в станции
- **in_use** - повербанк взят пользователем (статус 'borrow' в orders)
- **not_returned** - повербанк не возвращен в течение установленного времени (по умолчанию 24 часа)

ЛОГИКА ОПРЕДЕЛЕНИЯ СТАТУСА
--------------------------
Статус определяется следующим образом:
1. Если повербанк находится в station_powerbank → 'in_station'
2. Если есть активный заказ (status='borrow', completed_at=NULL) и прошло больше reminder_hours часов → 'not_returned'
3. Если есть активный заказ (status='borrow', completed_at=NULL) и прошло меньше reminder_hours часов → 'in_use'
4. Иначе → 'in_station'

ENDPOINTS
=========

ПРИМЕЧАНИЕ: API поддерживает как новые маршруты (/api/powerbanks-status), так и старые (/api/powerbanks/status) для обратной совместимости.

1. GET /api/powerbanks-status - Получить повербанки с их статусами
----------------------------------------------------------------

ОПИСАНИЕ: Получает список повербанков с их текущими статусами

ЗАПРОС:
- Метод: GET
- URL: /api/powerbanks-status
- Параметры запроса:
  * status (string, опционально) - Фильтр по статусу ('in_station', 'in_use', 'not_returned')
  * org_unit_id (int, опционально) - Фильтр по группе
  * page (int, опционально) - Номер страницы (по умолчанию 1)
  * limit (int, опционально) - Количество записей на странице (по умолчанию 50, максимум 100)

ПРИМЕРЫ ЗАПРОСОВ:
- GET /api/powerbanks-status
- GET /api/powerbanks-status?status=in_use
- GET /api/powerbanks-status?status=not_returned&org_unit_id=1
- GET /api/powerbanks-status?page=2&limit=20

ОТВЕТ:
- Статус: 200 OK (успех) или 400 Bad Request (ошибка валидации)
- Content-Type: application/json

Пример ответа (успех):
{
  "success": true,
  "data": [
    {
      "powerbank_id": 52,
      "serial_number": "DCHA54000009",
      "status": "in_station",
      "station_id": 13,
      "user_id": null,
      "borrow_time": null,
      "completed_at": null,
      "station_name": "Station-001",
      "user_name": null,
      "user_phone": null,
      "user_email": null,
      "org_unit_name": "Группа А"
    },
    {
      "powerbank_id": 53,
      "serial_number": "DCHA54000019",
      "status": "in_use",
      "station_id": null,
      "user_id": 18,
      "borrow_time": "2025-10-08T22:31:20",
      "completed_at": null,
      "station_name": null,
      "user_name": "Иванов Иван Иванович",
      "user_phone": "+79001234567",
      "user_email": "ivan@example.com",
      "org_unit_name": "Группа А"
    },
    {
      "powerbank_id": 54,
      "serial_number": "DCHA54000015",
      "status": "not_returned",
      "station_id": null,
      "user_id": 18,
      "borrow_time": "2025-10-08T22:31:31",
      "completed_at": null,
      "station_name": null,
      "user_name": "Иванов Иван Иванович",
      "user_phone": "+79001234567",
      "user_email": "ivan@example.com",
      "org_unit_name": "Группа А"
    }
  ],
  "pagination": {
    "page": 1,
    "limit": 50,
    "total": 3,
    "total_pages": 1,
    "has_next": false,
    "has_prev": false
  },
  "filters": {
    "status": null,
    "org_unit_id": null
  }
}

ПОЛЯ ОТВЕТА:
- powerbank_id (int): ID повербанка
- serial_number (string): Серийный номер повербанка
- status (string): Статус повербанка ('in_station', 'in_use', 'not_returned')
- station_id (int|null): ID станции, где находится повербанк (null если не в станции)
- user_id (int|null): ID пользователя, который взял повербанк (null если не взят)
- borrow_time (string|null): Время взятия повербанка в формате ISO 8601 (null если не взят)
- completed_at (string|null): Время возврата повербанка в формате ISO 8601 (null если не возвращен)
- station_name (string|null): Название станции (box_id) (null если не в станции)
- user_name (string|null): ФИО пользователя (null если не взят)
- user_phone (string|null): Телефон пользователя (null если не взят)
- user_email (string|null): Email пользователя (null если не взят)
- org_unit_name (string|null): Название группы/подгруппы повербанка

ОШИБКИ:
- 400: "Некорректный статус. Доступные: in_station, in_use, not_returned"
- 400: "org_unit_id должен быть числом"

2. GET /api/powerbanks-status/summary - Получить сводку по статусам
----------------------------------------------------------------

ОПИСАНИЕ: Получает сводку по количеству повербанков в каждом статусе

ЗАПРОС:
- Метод: GET
- URL: /api/powerbanks-status/summary
- Параметры запроса:
  * org_unit_id (int, опционально) - Фильтр по группе

ПРИМЕРЫ ЗАПРОСОВ:
- GET /api/powerbanks-status/summary
- GET /api/powerbanks-status/summary?org_unit_id=1

ОТВЕТ:
- Статус: 200 OK (успех) или 400 Bad Request (ошибка валидации)
- Content-Type: application/json

Пример ответа (успех):
{
  "success": true,
  "data": {
    "in_station": 1,
    "in_use": 1,
    "not_returned": 1
  },
  "filters": {
    "org_unit_id": null
  }
}

ОШИБКИ:
- 400: "org_unit_id должен быть числом"

3. GET /api/powerbanks-status/{powerbank_id} - Получить конкретный повербанк
-------------------------------------------------------------------------

ОПИСАНИЕ: Получает информацию о конкретном повербанке с его статусом

ЗАПРОС:
- Метод: GET
- URL: /api/powerbanks-status/{powerbank_id}
- Параметры пути:
  * powerbank_id (int) - ID повербанка

ПРИМЕРЫ ЗАПРОСОВ:
- GET /api/powerbanks-status/52

ОТВЕТ:
- Статус: 200 OK (успех) или 404 Not Found (повербанк не найден) или 400 Bad Request (ошибка валидации)
- Content-Type: application/json

Пример ответа (успех):
{
  "success": true,
  "data": {
    "powerbank_id": 52,
    "serial_number": "DCHA54000009",
    "status": "in_station",
    "station_id": 13,
    "user_id": null,
    "borrow_time": null,
    "completed_at": null,
    "station_name": "Station-001",
    "user_name": null,
    "user_phone": null,
    "user_email": null,
    "org_unit_name": "Группа А"
  }
}

ОШИБКИ:
- 400: "Некорректный ID повербанка"
- 404: "Повербанк не найден"

ПРИМЕРЫ ИСПОЛЬЗОВАНИЯ ДЛЯ ФРОНТЕНДА
==================================

1. Получить все повербанки со статусами:
```javascript
const response = await fetch('/api/powerbanks-status');
const data = await response.json();

if (data.success) {
  data.data.forEach(powerbank => {
    console.log(`Повербанк ${powerbank.serial_number}: ${powerbank.status}`);
  });
}
```

2. Получить только повербанки в использовании:
```javascript
const response = await fetch('/api/powerbanks-status?status=in_use');
const data = await response.json();

if (data.success) {
  console.log(`Повербанков в использовании: ${data.data.length}`);
}
```

3. Получить повербанки, которые не возвращены:
```javascript
const response = await fetch('/api/powerbanks-status?status=not_returned');
const data = await response.json();

if (data.success) {
  data.data.forEach(powerbank => {
    console.log(`Повербанк ${powerbank.serial_number} не возвращен пользователем ${powerbank.user_id}`);
  });
}
```

4. Получить сводку по статусам:
```javascript
const response = await fetch('/api/powerbanks-status/summary');
const data = await response.json();

if (data.success) {
  const summary = data.data;
  console.log(`В станции: ${summary.in_station}`);
  console.log(`В использовании: ${summary.in_use}`);
  console.log(`Не возвращены: ${summary.not_returned}`);
}
```

5. Фильтрация по группе:
```javascript
const response = await fetch('/api/powerbanks-status?org_unit_id=1&status=in_use');
const data = await response.json();

if (data.success) {
  console.log(`Повербанков группы 1 в использовании: ${data.data.length}`);
}
```

6. Отображение статусов в UI:
```javascript
const getStatusDisplay = (status) => {
  switch (status) {
    case 'in_station':
      return { text: 'В станции', color: 'green', icon: '🏪' };
    case 'in_use':
      return { text: 'Используется', color: 'blue', icon: '🔋' };
    case 'not_returned':
      return { text: 'Не возвращен', color: 'red', icon: '⚠️' };
    default:
      return { text: 'Неизвестно', color: 'gray', icon: '❓' };
  }
};

const renderPowerbankStatus = (powerbank) => {
  const statusInfo = getStatusDisplay(powerbank.status);
  return `
    <div class="powerbank-card">
      <span class="status-icon">${statusInfo.icon}</span>
      <span class="serial">${powerbank.serial_number}</span>
      <span class="status" style="color: ${statusInfo.color}">
        ${statusInfo.text}
      </span>
    </div>
  `;
};
```

ОБРАБОТКА ОШИБОК
================

1. Проверка статуса ответа:
```javascript
const response = await fetch('/api/powerbanks/status');
if (!response.ok) {
  const error = await response.json();
  console.error('Ошибка API:', error.error);
  return;
}
```

2. Обработка ошибок валидации:
```javascript
try {
  const response = await fetch('/api/powerbanks/status?status=invalid_status');
  const data = await response.json();
  
  if (!data.success) {
    alert(`Ошибка: ${data.error}`);
  }
} catch (error) {
  console.error('Ошибка сети:', error);
}
```

3. Обработка пустых результатов:
```javascript
const response = await fetch('/api/powerbanks/status?status=in_use');
const data = await response.json();

if (data.success && data.data.length === 0) {
  console.log('Нет повербанков в использовании');
} else if (data.success) {
  console.log(`Найдено ${data.data.length} повербанков в использовании`);
}
```

НАСТРОЙКА ВРЕМЕНИ НАПОМИНАНИЯ
=============================

Время, через которое повербанк считается "не возвращенным", настраивается в таблице org_unit в поле reminder_hours:

```sql
-- Установить время напоминания для группы (в часах)
UPDATE org_unit SET reminder_hours = 48 WHERE org_unit_id = 1;

-- Установить время напоминания для подгруппы
UPDATE org_unit SET reminder_hours = 12 WHERE org_unit_id = 2;
```

По умолчанию reminder_hours = 24 часа.

ОБРАТНАЯ СОВМЕСТИМОСТЬ
======================

Для обратной совместимости поддерживаются старые маршруты:

- GET /api/powerbanks/status - эквивалент GET /api/powerbanks-status
- GET /api/powerbanks/status/summary - эквивалент GET /api/powerbanks-status/summary  
- GET /api/powerbanks/{powerbank_id}/status - эквивалент GET /api/powerbanks-status/{powerbank_id}

Рекомендуется использовать новые маршруты для избежания конфликтов с другими API.

ВАЖНЫЕ ЗАМЕЧАНИЯ
================

1. **Производительность**: Представление v_powerbank_status может быть медленным при большом количестве повербанков. Рекомендуется использовать пагинацию.

2. **Актуальность данных**: Статусы обновляются в реальном времени на основе текущего состояния базы данных.

3. **Фильтрация**: Все фильтры можно комбинировать для получения точных результатов.

4. **Пагинация**: Максимальный размер страницы ограничен 100 записями для обеспечения производительности.

5. **Статус "not_returned"**: Автоматически присваивается на основе времени взятия повербанка и настроек группы.
